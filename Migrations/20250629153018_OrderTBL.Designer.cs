// <auto-generated />
using System;
using AnhBui.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AnhBui.Migrations
{
    [DbContext(typeof(AnhBuiDbContext))]
    [Migration("20250629153018_OrderTBL")]
    partial class OrderTBL
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AnhBui.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderPlaced")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("AnhBui.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("AnhBui.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsTrendingProduct")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Detail = "Áo thun cotton 100%, mềm mại và thoáng mát, form unisex dễ mặc cho cả nam và nữ.",
                            ImageUrl = "https://dosi-in.com/images/detailed/42/CDL10_1.jpg",
                            IsTrendingProduct = true,
                            Name = "Áo Thun",
                            Price = 75000m
                        },
                        new
                        {
                            Id = 2,
                            Detail = "Áo khoác vải dù nhẹ, chống gió tốt, thiết kế có mũ tiện lợi cho ngày mưa.",
                            ImageUrl = "https://www.chapi.vn/img/product/2021/11/20/ao-khoac-nam-trung-nien-co-be-bhg-18-new.jpg",
                            IsTrendingProduct = true,
                            Name = "Áo Khoác",
                            Price = 200000m
                        },
                        new
                        {
                            Id = 3,
                            Detail = "Áo len chất dệt kim mềm mại, giữ ấm tốt nhưng vẫn thoáng khí.",
                            ImageUrl = "https://4menshop.com/images/thumbs/2023/07/ao-len-phoi-mau-al011-mau-do-18179.jpg",
                            IsTrendingProduct = true,
                            Name = "Áo Len",
                            Price = 150000m
                        },
                        new
                        {
                            Id = 4,
                            Detail = "Quần jean co giãn nhẹ, lên form đẹp, thoải mái vận động cả ngày.",
                            ImageUrl = "https://th.bing.com/th/id/OIP.sOahbQYxx6aZynZjlygcaAHaLH?w=640&h=960&rs=1&pid=ImgDetMain&cb=idpwebp2&o=7&rm=3",
                            IsTrendingProduct = true,
                            Name = "Quần Jean",
                            Price = 125000m
                        },
                        new
                        {
                            Id = 5,
                            Detail = "Quần tây vải mềm mịn, đứng form chuẩn, phù hợp đi làm hoặc đi học.",
                            ImageUrl = "https://4menshop.com/images/thumbs/2022/02/quan-tay-tron-regular-mau-den-qt026-16143.jpg",
                            IsTrendingProduct = true,
                            Name = "Quần Tây",
                            Price = 250000m
                        },
                        new
                        {
                            Id = 6,
                            Detail = "Bộ thể thao thun lạnh co giãn 4 chiều, thấm hút mồ hôi cực tốt.",
                            ImageUrl = "https://cf.shopee.vn/file/606ec435877c83e0e550e93b28bac804",
                            IsTrendingProduct = true,
                            Name = "Bộ Quần Áo Thể Thao",
                            Price = 150000m
                        });
                });

            modelBuilder.Entity("AnhBui.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("ShoppingCartId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("AnhBui.Models.OrderDetail", b =>
                {
                    b.HasOne("AnhBui.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnhBui.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("AnhBui.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("AnhBui.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("AnhBui.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
